#include<bits/stdc++.h>
using namespace std;

#define ll long long
const ll N  = 1e5+5;

vector<ll>v[N];
vector<ll>dist(N);
vector<ll>vis(N);

void bfs(ll node)
{
    vis[node]=1;
    dist[node]=0;
    queue<ll>q;
    q.push(node);

    while(!q.empty())
    {
        ll x = q.front();
        q.pop();

        for(auto i : v[x])
        {
            if(!vis[i])
            {
            	vis[i]=1;
                dist[i]=dist[x]+1;
                q.push(i);
            }
        }
    }
}

bool compare(ll a, ll b)
{
	if(dist[a]!=dist[b])
    return dist[a]<dist[b];
    
    else return a<b;
}

int main()
{
    ll t;  cin>>t;

    while(t--)
    {
        ll n,m,s,k;  cin>>n>>m>>s>>k;

        for(ll i=0;i<=N;i++)
        {
            v[i].clear();
            vis[i]=0;
            dist[i]=0;
        }

        for(ll i=1;i<=m;i++)
        {
            ll a,b;  cin>>a>>b;
            v[a].push_back(b);
            v[b].push_back(a);
        }
        bfs(0);
        vector<ll>a(s);
        
       /* for(ll i=0;i<=n;i++)
        {
        	cout<<dist[i]<<" ";
        }
        cout<<endl;*/

        for( auto &it : a)
        {
            cin>>it;
        }
        sort(a.begin(),a.end(),compare);
        
        //for(auto i :a) cout<<i<<"  ";
        
        ll res =0;
        
        //for(ll i=1;i<=n;i++) cout<<dist[a[i]]<<" ";
        //cout<<endl;
        
        for(ll i=0;i<k;i++)
        {
        	res+=2*dist[a[i]];
        }
        cout<<res<<endl;
    }
    
}